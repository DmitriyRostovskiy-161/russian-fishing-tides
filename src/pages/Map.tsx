import Layout from "@/components/Layout";
import { useState } from "react";
import { Search, Filter, MapPin, Star, Clock, Cloud } from "lucide-react";
import pondLilies from "@/assets/pond-lilies.jpg";
import riverSpot from "@/assets/river-spot.jpg";

const Map = () => {
  const [selectedSpot, setSelectedSpot] = useState<number | null>(null);
  const [filters, setFilters] = useState({
    location: "",
    fish: "",
    bait: "",
    time: "",
  });

  const spots = [
    {
      id: 1,
      name: "–û–∑–µ—Ä–æ –°—Ç–∞—Ä—ã–π –û—Å—Ç—Ä–æ–≥",
      coordinates: { x: 30, y: 40 },
      fish: "–ö–∞—Ä–ø, –ë–µ–ª—ã–π –∞–º—É—Ä",
      bait: "–ö—É–∫—É—Ä—É–∑–∞, –ë–æ–π–ª—ã",
      bestTime: "–£—Ç—Ä–æ, –í–µ—á–µ—Ä",
      weather: "–¢—ë–ø–ª–∞—è, –ë–µ–∑–≤–µ—Ç—Ä–µ–Ω–Ω–∞—è",
      rating: 4.8,
      image: pondLilies,
    },
    {
      id: 2,
      name: "–†–µ–∫–∞ –ê—Ö—Ç—É–±–∞",
      coordinates: { x: 60, y: 55 },
      fish: "–°—É–¥–∞–∫, –ñ–µ—Ä–µ—Ö",
      bait: "–í–æ–±–ª–µ—Ä, –ë–ª–µ—Å–Ω–∞",
      bestTime: "–ù–æ—á—å",
      weather: "–ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è",
      rating: 4.6,
      image: riverSpot,
    },
    {
      id: 3,
      name: "–û–∑–µ—Ä–æ –ú–µ–¥–≤–µ–∂—å–µ",
      coordinates: { x: 45, y: 25 },
      fish: "–§–æ—Ä–µ–ª—å, –°–∏–≥",
      bait: "–ú—É—à–∫–∞, –ß–µ—Ä–≤—å",
      bestTime: "–†–∞–Ω–Ω–µ–µ —É—Ç—Ä–æ",
      weather: "–ü–∞—Å–º—É—Ä–Ω–∞—è",
      rating: 4.9,
      image: pondLilies,
    },
  ];

  return (
    <Layout>
      <div className="container mx-auto px-4 py-8">
        <h1 className="text-3xl md:text-4xl font-heading font-bold mb-8">
          –ö–∞—Ä—Ç–∞ —Ç–æ—á–µ–∫ –∫–ª—ë–≤–∞
        </h1>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Filters Panel */}
          <div className="lg:col-span-1">
            <div className="card-fishing">
              <h2 className="text-xl font-heading font-semibold mb-4 flex items-center">
                <Filter className="w-5 h-5 mr-2" />
                –§–∏–ª—å—Ç—Ä—ã
              </h2>

              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium mb-2">–ü–æ–∏—Å–∫</label>
                  <div className="relative">
                    <Search className="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-muted-foreground" />
                    <input
                      type="text"
                      placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞ –∏–ª–∏ —Ä—ã–±—ã..."
                      className="w-full pl-10 pr-4 py-2 rounded-xl border border-input focus:border-primary focus:ring-2 focus:ring-primary/20 transition-all"
                    />
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">–õ–æ–∫–∞—Ü–∏—è</label>
                  <select
                    value={filters.location}
                    onChange={(e) => setFilters({ ...filters, location: e.target.value })}
                    className="w-full px-4 py-2 rounded-xl border border-input focus:border-primary focus:ring-2 focus:ring-primary/20 transition-all"
                  >
                    <option value="">–í—Å–µ –ª–æ–∫–∞—Ü–∏–∏</option>
                    <option value="lake">–û–∑–µ—Ä–æ</option>
                    <option value="river">–†–µ–∫–∞</option>
                    <option value="canal">–ö–∞–Ω–∞–ª</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">–í–∏–¥ —Ä—ã–±—ã</label>
                  <select
                    value={filters.fish}
                    onChange={(e) => setFilters({ ...filters, fish: e.target.value })}
                    className="w-full px-4 py-2 rounded-xl border border-input focus:border-primary focus:ring-2 focus:ring-primary/20 transition-all"
                  >
                    <option value="">–í—Å–µ –≤–∏–¥—ã</option>
                    <option value="carp">üêü –ö–∞—Ä–ø</option>
                    <option value="pike">üêü –©—É–∫–∞</option>
                    <option value="perch">üêü –û–∫—É–Ω—å</option>
                    <option value="catfish">üêü –°–æ–º</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">–ù–∞–∂–∏–≤–∫–∞</label>
                  <select
                    value={filters.bait}
                    onChange={(e) => setFilters({ ...filters, bait: e.target.value })}
                    className="w-full px-4 py-2 rounded-xl border border-input focus:border-primary focus:ring-2 focus:ring-primary/20 transition-all"
                  >
                    <option value="">–õ—é–±–∞—è</option>
                    <option value="corn">–ö—É–∫—É—Ä—É–∑–∞</option>
                    <option value="worm">–ß–µ—Ä–≤—å</option>
                    <option value="boilies">–ë–æ–π–ª—ã</option>
                    <option value="lure">–ë–ª–µ—Å–Ω–∞</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">–í—Ä–µ–º—è —Å—É—Ç–æ–∫</label>
                  <select
                    value={filters.time}
                    onChange={(e) => setFilters({ ...filters, time: e.target.value })}
                    className="w-full px-4 py-2 rounded-xl border border-input focus:border-primary focus:ring-2 focus:ring-primary/20 transition-all"
                  >
                    <option value="">–õ—é–±–æ–µ</option>
                    <option value="morning">–£—Ç—Ä–æ</option>
                    <option value="day">–î–µ–Ω—å</option>
                    <option value="evening">–í–µ—á–µ—Ä</option>
                    <option value="night">–ù–æ—á—å</option>
                  </select>
                </div>

                <div className="flex space-x-2 pt-4">
                  <button className="btn-primary flex-1">–ü—Ä–∏–º–µ–Ω–∏—Ç—å</button>
                  <button className="btn-outline flex-1">–°–±—Ä–æ—Å–∏—Ç—å</button>
                </div>
              </div>

              <div className="mt-6 pt-6 border-t border-border">
                <h3 className="font-semibold mb-3">–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</h3>
                <div className="space-y-2 text-sm">
                  <div className="flex items-center space-x-2">
                    <MapPin className="w-4 h-4 text-primary" />
                    <span>–ù–æ–≤–∞—è —Ç–æ—á–∫–∞ –Ω–∞ –ê—Ö—Ç—É–±–µ</span>
                  </div>
                  <div className="flex items-center space-x-2">
                    <MapPin className="w-4 h-4 text-primary" />
                    <span>–û–±–Ω–æ–≤–ª—ë–Ω –∫–ª—ë–≤ –Ω–∞ –ú–µ–¥–≤–µ–∂—å–µ–º</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Map Area */}
          <div className="lg:col-span-2">
            <div className="card-fishing relative h-[600px] overflow-hidden">
              <div className="absolute inset-0 bg-gradient-to-br from-blue-50 to-blue-100">
                {/* Map background */}
                <div className="relative w-full h-full">
                  {/* Water texture */}
                  <div className="absolute inset-0 opacity-30">
                    <div className="animate-water-ripple absolute top-10 left-20 text-6xl">üíß</div>
                    <div className="animate-water-ripple absolute top-40 right-30 text-4xl" style={{ animationDelay: '2s' }}>üíß</div>
                    <div className="animate-water-ripple absolute bottom-20 left-40 text-5xl" style={{ animationDelay: '4s' }}>üíß</div>
                  </div>

                  {/* Spot markers */}
                  {spots.map((spot) => (
                    <button
                      key={spot.id}
                      onClick={() => setSelectedSpot(spot.id)}
                      className={`absolute transform -translate-x-1/2 -translate-y-1/2 ${
                        selectedSpot === spot.id ? 'scale-125' : 'hover:scale-110'
                      } transition-transform`}
                      style={{ left: `${spot.coordinates.x}%`, top: `${spot.coordinates.y}%` }}
                      aria-label={`–¢–æ—á–∫–∞ ${spot.name}`}
                    >
                      <div className="relative">
                        <div className={`w-12 h-12 rounded-full flex items-center justify-center ${
                          selectedSpot === spot.id 
                            ? 'bg-primary text-white shadow-lg' 
                            : 'bg-white text-primary shadow-md'
                        }`}>
                          <MapPin className="w-6 h-6" />
                        </div>
                        {selectedSpot === spot.id && (
                          <div className="absolute -bottom-1 left-1/2 -translate-x-1/2 w-2 h-2 bg-primary rotate-45" />
                        )}
                      </div>
                    </button>
                  ))}
                </div>
              </div>

              {/* Spot Detail Panel */}
              {selectedSpot && (
                <div className="absolute bottom-0 left-0 right-0 bg-white border-t border-border p-6 animate-float">
                  {(() => {
                    const spot = spots.find((s) => s.id === selectedSpot);
                    if (!spot) return null;
                    return (
                      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                        <div className="md:col-span-1">
                          <img
                            src={spot.image}
                            alt={spot.name}
                            className="w-full h-32 object-cover rounded-lg"
                          />
                        </div>
                        <div className="md:col-span-2">
                          <h3 className="text-xl font-heading font-semibold mb-2">
                            {spot.name}
                          </h3>
                          <div className="grid grid-cols-2 gap-2 text-sm">
                            <div className="flex items-center space-x-2">
                              <span className="text-muted-foreground">–†—ã–±–∞:</span>
                              <span className="font-medium">{spot.fish}</span>
                            </div>
                            <div className="flex items-center space-x-2">
                              <Clock className="w-4 h-4 text-muted-foreground" />
                              <span>{spot.bestTime}</span>
                            </div>
                            <div className="flex items-center space-x-2">
                              <span className="text-muted-foreground">–ù–∞–∂–∏–≤–∫–∞:</span>
                              <span className="font-medium">{spot.bait}</span>
                            </div>
                            <div className="flex items-center space-x-2">
                              <Cloud className="w-4 h-4 text-muted-foreground" />
                              <span>{spot.weather}</span>
                            </div>
                          </div>
                          <div className="flex items-center justify-between mt-3">
                            <div className="flex items-center space-x-1">
                              <Star className="w-5 h-5 text-yellow-500 fill-current" />
                              <span className="font-semibold">{spot.rating}</span>
                            </div>
                            <button className="btn-primary text-sm">
                              –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                            </button>
                          </div>
                        </div>
                      </div>
                    );
                  })()}
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </Layout>
  );
};

export default Map;